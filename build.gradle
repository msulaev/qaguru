plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.10.0"
}
repositories {
    mavenCentral()
}

def allureVersion = "2.19.0";

dependencies{
    implementation(
            'com.codeborne:selenide:6.7.3',
            'org.junit.jupiter:junit-jupiter:5.9.0',
            'com.github.javafaker:javafaker:1.0.2',
            'com.codeborne:pdf-test:1.7.0',
            'net.lingala.zip4j:zip4j:2.11.1',
            "org.hamcrest:hamcrest:2.2",
            'com.codeborne:xls-test:1.5.0',
            'com.opencsv:opencsv:5.6',
            'org.assertj:assertj-core:3.23.1',
            'com.fasterxml.jackson.core:jackson-core:2.13.3',
            'io.qameta.allure:allure-selenide:2.19.0',
             'org.apache.poi:poi:3.9',
             'org.aspectj:aspectjweaver:1.9.9.1'
    )
    implementation 'com.fasterxml:jackson-xml-databind:0.6.2'
    testImplementation 'org.junit.platform:junit-platform-suite-engine:1.9.0'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}


test {
    useJUnitPlatform{
        include '**/AllTests.class'
    }

}
